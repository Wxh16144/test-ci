# When pushing a tag. this workflow will trigger site deployment and fixed version address comments

name: Deploy website
on:
  push:
    tags:
      - '5.*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') && (contains(github.ref_name, '-') == false)
    steps:

      - name: Format Docker Image tags
        id: build-docker-version
        shell: bash
        run: |
          # 5.2.2 => output: 5, 5.2, 5.2.2
          docker_name=${{ github.repository }} # ant-design/ant-design
          version=${{ github.ref_name }}
          major=$(echo $version | cut -d '.' -f 1)
          minor=$(echo $version | cut -d '.' -f 2)
          # patch=$(echo $version | cut -d '.' -f 3)

          tags="$docker_name:$version,$docker_name:$major.$minor,$docker_name:$major"

          # If it's not manually triggered, then it's just adding a latest tag
          if [ "${{ github.event_name }}" != "workflow_dispatch" ]; then
            tags="$tags,$docker_name:latest"
          fi

          echo "tags=$tags" >> $GITHUB_OUTPUT
  setup:
    runs-on: ubuntu-latest
    if: false
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: cache package-lock.json
        uses: actions/cache@v3
        with:
          path: package-temp-dir
          key: lock-${{ github.sha }}

      - name: create package-lock.json
        run: npm i --package-lock-only --ignore-scripts

      - name: hack for single file
        run: |
          if [ ! -d "package-temp-dir" ]; then
            mkdir package-temp-dir
          fi
          cp package-lock.json package-temp-dir
      - name: cache node_modules
        id: node_modules_cache_id
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-temp-dir/package-lock.json') }}

      - name: install
        if: steps.node_modules_cache_id.outputs.cache-hit != 'true'
        run: npm ci

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: restore cache from package-lock.json
        uses: actions/cache@v3
        with:
          path: package-temp-dir
          key: lock-${{ github.sha }}

      - name: restore cache from node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-temp-dir/package-lock.json') }}

      - name: build
        run: npm run build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          force_orphan: true
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
